

Phalcon Developer Tools
=======================
This tools provides you useful scripts to generate code helping to develop faster and easyapplications that use Phalcon framework. **Important:** You need at least Phalcon Framework version 0.4.0 to use developer tools.Also is recommended to have installed PHP 5.3.6 as minimum. iframeIf you prefer a web interface over a console, check .

Download
--------
You can download a cross platform package containing the developer tools from the. Also you can clone itfrom  `Github <https://github.com/phalcon/phalcon-devtools>`_ .

Installation
^^^^^^^^^^^^
These are detailed instructions on how to install the developer tools on different platforms:

* Installation on Windows
* Installation on OS X
* Installation on Linux



Getting Available Commands
--------------------------
You can get a list of available commands in Phalcon tools by typing: phalcon commands

.. figure:: ../_static/img/tools-4.png
   :align: center



Generating a Project Skeleton
-----------------------------
You can use Phalcon tools to generate pre-defined project skeletons for your applicationswith Phalcon framework. By default the project skeleton generator will use mod_rewrite for Apache. Type the following command on your web server document root:

.. figure:: ../_static/img/tools-1.png
   :align: center

The above recommended project structure was generated:

.. figure:: ../_static/img/tools-2.png
   :align: center

You could add the parameter *--help* to get help on the usage of a certain script:

.. figure:: ../_static/img/tools-3.png
   :align: center

Accessing the project from the web server will show you:

.. figure:: ../_static/img/tools-6.png
   :align: center



Generating Controllers
----------------------
The command "create-controller" will provide you the posibillity to generate controller skeletons.It's important to invoke this command inside a directory that already have a Phalcon project. 

.. figure:: ../_static/img/tools-5.png
   :align: center

The following code is generated by the script:

.. code-block:: php

    <?php
    
    class TestController extends Phalcon_Controller {
    
    	public function indexAction(){
    
    	}
    
    }



Preparing Database Settings
---------------------------
When a project is generated using developer tools. A configuration file can be found in *app/config/config.ini* To generate models or scaffold is necessary to modify these settings to acomomdate to your database configuration.A complete guide to the settings supported by Phalcon can be found  Change the database section at your config.ini file:

.. code-block:: php

    [database]
    adapter = Mysql
    host = "127.0.0.1"
    username = "root"
    password = "secret"
    name = "store_db"
    
    [phalcon]
    controllersDir = "../app/controllers/"
    modelsDir = "../app/models/"
    viewsDir = "../app/views/"
    baseUri = "/store/"



Generating Models
-----------------
There are several options to create models. You can create all models from the default database connectionor a single one. Models can have public attributes or be accessed by setters/getters. The most simple way to generate a model is:

.. figure:: ../_static/img/tools-7.png
   :align: center

All table attributes have been declared public so you can access it directly.

.. code-block:: php

    <?php
    
    class Products extends Phalcon_Model_Base {
    
    	/**
    	 * @var integer
    	 */
    	public $id;
    
    	/**
    	 * @var integer
    	 */
    	public $types_id;
    
    	/**
    	 * @var string
    	 */
    	public $name;
    
    	/**
    	 * @var string
    	 */
    	public $price;
    
    	/**
    	 * @var integer
    	 */
    	public $quantity;
    
    	/**
    	 * @var string
    	 */
    	public $status;
    
    }

By adding the *--gen-setters-getters* you can generate the class attributes with protectedvisibility and accessing them with setter/getter methods. Those methods can help you to implement business rules for a specific attribute of the model. 

.. code-block:: php

    <?php
    
    class Products extends Phalcon_Model_Base {
    
    	/**
    	 * @var integer
    	 */
    	protected $id;
    
    	/**
    	 * @var integer
    	 */
    	protected $types_id;
    
    	/**
    	 * @var string
    	 */
    	protected $name;
    
    	/**
    	 * @var string
    	 */
    	protected $price;
    
    	/**
    	 * @var integer
    	 */
    	protected $quantity;
    
    	/**
    	 * @var string
    	 */
    	protected $status;
    
    
    	/**
    	 * Method to set the value of field id
    	 * @param integer $id
    	 */
    	public function setId($id){
    		$this->id = $id;
    	}
    
    	/**
    	 * Method to set the value of field types_id
    	 * @param integer $types_id
    	 */
    	public function setTypesId($types_id){
    		$this->types_id = $types_id;
    	}
    
    	...
    
    	/**
    	 * Returns the value of field status
    	 * @return string
    	 */
    	public function getStatus(){
    		return $this->status;
    	}
    
    }

A nice feature of the model generator is that it keeps changes made by the developer between code generations.This allows to add or remove fields without be worried about losing any change made to the model. The following screencast shows you how it works: iframe

Scaffold a CRUD
---------------
Scaffolding is a quick way to generate some of the major pieces of an application.If you want to create the models, views, and controllers for a new resource in a single operation, scaffolding is the tool for the job. Youâll most probably want to customize the generated code. Many developers avoid scaffolding entirely, preferring to write all or most of their source code from scratch. The generated code can be a guide to a better understanding of how the framework works or develop prototypes.Scaffold based on the table "products":

.. figure:: ../_static/img/tools-9.png
   :align: center

The scaffold generator will build several files in your application, along with some folders.Hereâs a quick overview of what it creates: 

+----------------------------------------+--------------------------------+
| File                                   | Purpose                        | 
+========================================+================================+
| app/controllers/ProductsController.php | The Products controller        | 
+----------------------------------------+--------------------------------+
| app/models/Products.php                | The Products model             | 
+----------------------------------------+--------------------------------+
| app/views/layout/products.phtml        | Controller layout for Products | 
+----------------------------------------+--------------------------------+
| app/views/products/new.phtml           | View for the action "new"      | 
+----------------------------------------+--------------------------------+
| app/views/products/edit.phtml          | View for the action "edit"     | 
+----------------------------------------+--------------------------------+
| app/views/products/search.phtml        | View for the action "search"   | 
+----------------------------------------+--------------------------------+
| app/views/products/edit.phtml          | View for the action "edit"     | 
+----------------------------------------+--------------------------------+

When browsing the recently generated controller, you first will find a search form and a link to create a new Product:

.. figure:: ../_static/img/tools-10.png
   :align: center

The "create page" allows you to create products applying validations on the Products model. Phalconautomatically will validate not null fields producing warns if any of them is required. 

.. figure:: ../_static/img/tools-11.png
   :align: center

After doing a search, a pager will be available to show gradually the results. Use the "Edit" or "Delete" links in front of every result to take those actions on them.

.. figure:: ../_static/img/tools-12.png
   :align: center



Scaffold with Twitter/Bootstrap
-------------------------------
After the release of the amazing framework `Bootstrap <http://twitter.github.com/bootstrap/>`_ from Twitter many tools has been created around it. Phalcon Developer Tools provides a modifiedversion of the standard scaffold script to generate customized code ready to use with bootstrap. 

.. code-block:: php

    <?php

    # phalcon scaffold-bootstrap --table-name products

We have created a sample application that is mostly created with this script.There is a detailed article  .That application shows how to load bootstrap libraries in any development with Phalcon. 

Web Interface to Tools
----------------------
Also, if you prefer, it's possible to use Phalcon Developer Tools from a web interfase. Check outthe following screencast to figure out how it works: iframe

Integrating Tools with PhpStorm IDE
-----------------------------------
The below screencast shows how to integrate developer tools with the `PhpStorm IDE <http://www.jetbrains.com/phpstorm/>`_ .The configuration steps could be easily adapted to others IDEs for PHP. iframe

Conclusion
----------
Phalcon Developer Tools provide you an easy way to codify parts of your applications reducingthe number of errors introducing by mistake when coding. 