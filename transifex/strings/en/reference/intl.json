{
    "intl_85d2bc52cf53e27ca20645a9431c6930": "Internationalization",
    "intl_92aaa680cf30691651a1f728f7bbd0b1": "Phalcon is written in C as an extension for PHP. There is a PECL_ extension that offers internationalization functions to PHP applications called intl_. Starting from PHP 5.4\/5.5 this extension is bundled with PHP. Its documentation can be found in the pages of the official `PHP manual`_.",
    "intl_7225af6a7690ce43b3f118bf9235a8fa": "Phalcon does not offer this functionality, since creating such a component would be replicating existing code.",
    "intl_16faf9a6a387d16c7e9f1b7114966512": "In the examples below, we will show you how to implement the intl_ extension's functionality into Phalcon powered applications.",
    "intl_41d225fcbd85a9a62195821945d72707": "Find out best available Locale",
    "intl_f05a8fa309000dd32507bbfee2a385f3": "There are several ways to find out the best available locale using intl_. One of them is to check the HTTP \"Accept-Language\" header:",
    "intl_234654f0f0e9e33d203000dca2a8cd2a": "Locale could be something like \"en_GB\" or \"en\"",
    "intl_3ebdfbd89c1a413a2c4f3c0d948e52e5": "Below method returns a locale identified. It is used to get language, culture, or regionally-specific behavior from the Locale API. Examples of identifiers include:",
    "intl_7e66cc7448034f82ad8703f2b95faed7": "* en-US (English, United States) * zh-Hant-TW (Chinese, Traditional Script, Taiwan) * fr-CA, fr-FR (French for Canada and France respectively)",
    "intl_5fcd413e9e2e372297f489fe24dbdce6": "Formatting messages based on Locale",
    "intl_2a2dc5fcf450c50a14b465a81d95b046": "Part of creating a localized application is to produce concatenated, language-neutral messages. The MessageFormatter_ allows for the production of those messages.",
    "intl_178d127c9218637e406a7ca6e727d84d": "Printing numbers formatted based on some locale:",
    "intl_74788676640cf24873a5d31e48003c5d": "Prints \u20ac 4 560",
    "intl_408b4ce049aa9e37589305879ea666fc": "Prints USD$ 4,560.5",
    "intl_5b0f1aa2db82f39e46860db7cfb185e7": "Prints ARS$ 1.250,25",
    "intl_9422d3dc3121dcaa1b553f4157627efc": "Message formatting using time and date patterns:",
    "intl_0e63c14b25c7747f68277e26ccdb6bd4": "Setting parameters",
    "intl_461394b52a6120d8388b7b12bf86e854": "Prints \"At 3:50:31 PM on Apr 19, 2012, there was a disturbance on planet 7.\"",
    "intl_01f6129f2b84e7ac8c111e93980535be": "Prints \"\u00c0 15:53:01 le 19 avr. 2012, il y avait une perturbation sur la plan\u00e8te 7.\"",
    "intl_e68e6468f5553c619b4754175b53776d": "Locale-Sensitive comparison",
    "intl_1b21ef2fc5095722b554a3e0ffa70435": "The Collator_ class provides string comparison capability with support for appropriate locale-sensitive sort orderings. Check the examples below on the usage of this class:",
    "intl_94a3195d410f44f5b576523a8764398d": "Create a collator using Spanish locale",
    "intl_774f2564a457cd5a559a81260a86c650": "Returns that the strings are equal, in spite of the emphasis on the \"o\"",
    "intl_594eac9635771cadbc71967a3d5e6ec5": "Returns that the strings are not equal",
    "intl_86b69a9604c947e11ebd5d3a7ea33966": "Transliteration",
    "intl_7b5214c4dcab9dad7ea131785b8b50f9": "Transliterator_ provides transliteration of strings:"
}