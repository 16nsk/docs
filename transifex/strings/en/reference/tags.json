{
    "tags_c3144b8ef940c1ebff02551da1193039": "View Helpers",
    "tags_26fe4984f9926a35133255f4c1ed5fb8": "Writing and maintaining HTML markup can quickly become a tedious task because of the naming conventions and numerous attributes that have to be taken into consideration. Phalcon deals with this complexity by offering :doc:`Phalcon\\\\Tag <..\/api\/Phalcon_Tag>`, which in turn offers view helpers to generate HTML markup.",
    "tags_97e74baff8001359e1323244c3c485b2": "This component can be used in a plain HTML+PHP view or in a :doc:`Volt <volt>` template.",
    "tags_a05301caf81de2b012d3bcc32aadf8d1": "Document Type of Content",
    "tags_306666c1bdfab58d2a111c8245c7d5e9": "Phalcon provides Phalcon\\\\Tag::setDoctype() helper to set document type of the content. Document type setting may affect HTML output produced by other tag helpers. For example, if you set XHTML document type family, helpers that return or output HTML tags will produce self-closing tags to follow valid XHTML standard.",
    "tags_b9f573d409350f9ad0b4b4431e38898e": "Available document type constants in Phalcon\\\\Tag namespace are:",
    "tags_3ec97a9123bae742ac913d408397293e": "Setting document type.",
    "tags_745b00594b4893899ed2d060be8eea7a": "Getting document type.",
    "tags_a913248b009b9ce67a2e616972b49e9e": "The following HTML will be produced.",
    "tags_addde1f388bfd384d461b352d0146aeb": "W3C\/\/DTD HTML 4.01\/\/EN\"",
    "tags_ed32e12c95a9410e0f495bc5380cda76": "www.w3.org\/TR\/html4\/strict.dtd\">",
    "tags_85e055ff09040f1f1797f06641d93389": "Volt syntax:",
    "tags_ebe7861f32b5b88f1adc5867bd84d41a": "Generating Links",
    "tags_6fed5e5e83eff83835948f2a3633d97b": "A real common task in any web application or website is to produce links that allow us to navigate from one page to another. When they are internal URLs we can create them in the following manner:",
    "tags_5fff0e2c5e8c35e7d396d640174ca309": "Actually, all produced URLs are generated by the component :doc:`Phalcon\\\\Mvc\\\\Url <url>` (or service \"url\" failing)",
    "tags_27a89fa6a2d3db6cdb4d3ed5af1e0d93": "Same links generated with Volt:",
    "tags_d80e3bdaef8244040a542f67fcd04075": "Creating Forms",
    "tags_da11624fa19e8cda2e99e676ea2e41e3": "Forms in web applications play an essential part in retrieving user input. The following example shows how to implement a simple search form using view helpers:",
    "tags_d27e4aae0aae3fac6c653f7cb2b03c28": "This last code will generate the following HTML:",
    "tags_06a36510fed4747629d50856f444a826": "Same form generated in Volt:",
    "tags_acb82f62c8bdc466dfa1f8efbbc35409": "Phalcon also provides a :doc:`form builder <forms>` to create forms in an object-oriented manner.",
    "tags_f78e5a2f28f870991d16a021368871dc": "Helpers to Generate Form Elements",
    "tags_76edb8ec0dcb4c5d496f53dcb6f6b8b3": "Phalcon provides a series of helpers to generate form elements such as text fields, buttons and more. The first parameter of each helper is always the name of the element to be generated. When the form is submitted, the name will be passed along with the form data. In a controller you can get these values using the same name by using the getPost() and getQuery() methods on the request object ($this->request).",
    "tags_9d358ff3057e3a6fa9c7e6b31c120392": "Making Select Boxes",
    "tags_abfc004a0ef802ba25505abf41857949": "Generating select boxes (select box) is easy, especially if the related data is stored in PHP associative arrays. The helpers for select elements are Phalcon\\\\Tag::select() and Phalcon\\\\Tag::selectStatic(). Phalcon\\\\Tag::select() has been was specifically designed to work with :doc:`Phalcon\\\\Mvc\\\\Model <models>`, while Phalcon\\\\Tag::selectStatic() can with PHP arrays.",
    "tags_593e894d72a9c17f82834fb178282e10": "Using data from a resultset",
    "tags_fc9f87deb8feffec031d70d96cf85553": "Using data from an array",
    "tags_9c02c8367d177c1f294065a3edecfdd2": "The following HTML will generated:",
    "tags_2942cd92191a7671ed47ae8e39c6fe4c": "You can add an \"empty\" option to the generated HTML:",
    "tags_f298c863c1906cf5c321226577ad23d8": "Creating a Select Tag with an empty option",
    "tags_4314ad10978d6e5295430fcaddb76476": "Creating a Select Tag with an empty option with default text",
    "tags_0c04dce33fdd9d575e3ae484205cd477": "Volt syntax for above example:",
    "tags_d7b369e25a0fd32a072012ae2eac6dff": "Assigning HTML attributes",
    "tags_96133c6dea59a8e21c1dd8830d7d77d4": "All the helpers accept an array as their first parameter which can contain additional HTML attributes for the element generated.",
    "tags_f1cc9e4206867580dc22af76768cc7c5": "or using Volt:",
    "tags_2dee12a8009caf9941e26e95aa5529e9": "The following HTML is generated:",
    "tags_90680a0d6ea8d96ae9c3d278eee75491": "Setting Helper Values",
    "tags_d41d8cd98f00b204e9800998ecf8427e": "",
    "tags_d1f65b9d28d406d8c7cf83f5775c49e1": "From Controllers",
    "tags_ee6a94af060dc0d282ab7dc0ea202ca0": "It is a good programming principle for MVC frameworks to set specific values for form elements in the view. You can set those values directly from the controller using Phalcon\\\\Tag::setDefault(). This helper preloads a value for any helpers present in the view. If any helper in the view has a name that matches the preloaded value, it will use it, unless a value is directly assigned on the helper in the view.",
    "tags_3a082c1e05df761cc8022226bfc86488": "At the view, a selectStatic helper matches the same index used to preset the value. In this case \"color\":",
    "tags_be7e6e74365b955a1bc65b29d77f1561": "This will generate the following select tag with the value \"Blue\" selected:",
    "tags_6ac76522c00c412a4fbb903ea19d6032": "From the Request",
    "tags_a4c4d2b129dc240a15408fa1a7606e48": "A special feature that the :doc:`Phalcon\\\\Tag <..\/api\/Phalcon_Tag>` helpers have is that they keep the values of form helpers between requests. This way you can easily show validation messages without losing entered data.",
    "tags_30b618a7301fb8d8b32e47c2a8be084f": "Specifying values directly",
    "tags_f8114bbc24aaa6312eb398a26ea2066a": "Every form helper supports the parameter \"value\". With it you can specify a value for the helper directly. When this parameter is present, any preset value using setDefault() or via request will be ignored.",
    "tags_f8c9fc84fa74d911f322224af7074c29": "Changing dynamically the Document Title",
    "tags_910b594f8c82327d21d73614dd2c72c6": ":doc:`Phalcon\\\\Tag <..\/api\/Phalcon_Tag>` offers helpers to change dynamically the document title from the controller. The following example demonstrates just that:",
    "tags_11fa3ca18323c73cebd6841cd4dcaafe": "Static Content Helpers",
    "tags_8b872a9b81bce0e4f64179a652555204": ":doc:`Phalcon\\\\Tag <..\/api\/Phalcon_Tag>` also provide helpers to generate tags such as script, link or img. They aid in quick and easy generation of the static resources of your application",
    "tags_d7e6e0ce3a4102593931f158735cde7a": "Images",
    "tags_27051d8f6501b7b0a1d93c40b577534c": ".. code-block:: php      <?php      \/\/ Generate <img src=\"\/your-app\/img\/hello.gif\">     echo $this->tag->image(\"img\/hello.gif\");      \/\/ Generate <img alt=\"alternative text\" src=\"\/your-app\/img\/hello.gif\">     echo $this->tag->image(         array(            \"img\/hello.gif\",            \"alt\" => \"alternative text\"         )     );",
    "tags_693fb39361177ed6925aa84de2b9e7d3": "Stylesheets",
    "tags_dc139ea8d6f8483a9bc40aa989ad2206": ".. code-block:: php      <?php      \/\/ Generate <link rel=\"stylesheet\" href=\"http:\/\/fonts.googleapis.com\/css?family=Rosario\" type=\"text\/css\">     echo $this->tag->stylesheetLink(\"http:\/\/fonts.googleapis.com\/css?family=Rosario\", false);      \/\/ Generate <link rel=\"stylesheet\" href=\"\/your-app\/css\/styles.css\" type=\"text\/css\">     echo $this->tag->stylesheetLink(\"css\/styles.css\");",
    "tags_9e78f902697eeb6bedcdcb0883215e92": "fonts.googleapis.com\/css?family=Rosario\" type=\"text\/css\"> #}",
    "tags_cf68bb2dedfa37e577f0f9f69b7b3b4d": "fonts.googleapis.com\/css?family=Rosario\", false) }}",
    "tags_39404202e17269c2366ceb1a4c9caf3f": "Javascript",
    "tags_9a37e7a1394e29b86629f471aa3d7b84": ".. code-block:: php      <?php      \/\/ Generate <script src=\"http:\/\/localhost\/javascript\/jquery.min.js\" type=\"text\/javascript\"><\/script>     echo $this->tag->javascriptInclude(\"http:\/\/localhost\/javascript\/jquery.min.js\", false);      \/\/ Generate <script src=\"\/your-app\/javascript\/jquery.min.js\" type=\"text\/javascript\"><\/script>     echo $this->tag->javascriptInclude(\"javascript\/jquery.min.js\");",
    "tags_be7ba5686121df0cebfd766b926ba664": "localhost\/javascript\/jquery.min.js\" type=\"text\/javascript\"><\/script> #}",
    "tags_4baa9b794a54c1bc8cbab56d43e5cbb7": "localhost\/javascript\/jquery.min.js\", false) }}",
    "tags_70a9b234bde9b99d278cdf4eddefc89b": "HTML5 elements - generic HTML helper",
    "tags_98a764ec8520f16e70ae318adaa88522": "Phalcon offers a generic HTML helper that allows the generation of any kind of HTML element. It is up to the developer to produce a valid HTML element name to the helper.",
    "tags_32b919d18cfaca89383f6000dcc9c031": "Generate",
    "tags_b76450a52dc43274830b299ffdf5abbc": "<canvas id=\"canvas1\" width=\"300\" class=\"cnvclass\">",
    "tags_e338f861bd877b46f1df36aaeada2cad": "This is my canvas",
    "tags_f75bfd31238d957b9712bdc1be2d77b7": "<\/canvas>",
    "tags_5240a19e8081f79e65b6199ffe9897b9": "Tag Service",
    "tags_a8481a14be068e60748f0e6ead523064": ":doc:`Phalcon\\\\Tag <..\/api\/Phalcon_Tag>` is available via the 'tag' service, this means you can access it from any part of the application where the services container is located:",
    "tags_3ca9c99957e6c6ec9f86e78e21a79362": "You can easily add new helpers to a custom component replacing the service 'tag' in the services container:",
    "tags_f966ce4e181e49ba9d6fe934973cfe5c": "Create a new helper",
    "tags_6fd0cb7fb64538c542262c9f78e75e69": "Override an existing method",
    "tags_859b2f6f2834e80ef6e97f2a196af08b": "Then change the definition of the service 'tag':",
    "tags_0df7dba379145f570f6ddc01d9fe58f4": "Creating your own helpers",
    "tags_c7e9e5f23cbef8182b99090172b248c9": "You can easily create your own helpers. First, start by creating a new folder within the same directory as your controllers and models. Give it a title that is relative to what you are creating. For our example here, we can call it \"customhelpers\". Next we will create a new file titled ``MyTags.php`` within this new directory. At this point, we have a structure that looks similar to : ``\/app\/customhelpers\/MyTags.php``. In ``MyTags.php``, we will extend the :doc:`Phalcon\\\\Tag <..\/api\/Phalcon_Tag>` and implement your own helper. Below is a simple example of a custom helper:",
    "tags_82e5133b47aff3dff8db1618e0d02fde": "Converting parameters to array if it is not",
    "tags_5b61a84694979fe52641a07dd1e7f588": "Determining attributes \"id\" and \"name\"",
    "tags_90e92b9aab56703491b18c329c1b14f6": "Determining widget value,",
    "tags_b86a822c4cf76cc90cfa038245f5c71f": "\\Phalcon\\Tag::setDefault() allows to set the widget value",
    "tags_bef75aee935f560f9eb31732710d1d5e": "Generate the tag code",
    "tags_2db6c35c6ecf455bd52455a38f5e72fe": "After creating our custom helper, we will autoload the new directory that contains our helper class from our \"index.php\" located in the public directory.",
    "tags_bcdc4f4ee80e6a76b92dedcef33a115f": "Add the new helpers folder",
    "tags_40d58c968eee754cd56b2edcc365e93e": "Assign our new tag a definition so we can call it",
    "tags_250b8998fa225422145c1c8c5c0bfc85": "Now you are ready to use your new helper within your views:"
}