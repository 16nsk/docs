{
    "filter_754b623fb3822e02354394a3bd087dff": "Filtering and Sanitizing",
    "filter_22df063654e4541ad4a79e048ea25624": "Sanitizing user input is a critical part of software development. Trusting or neglecting to sanitize user input could lead to unauthorized access to the content of your application, mainly user data, or even the server your application is hosted on.",
    "filter_48352cae72aba688a0bff1c16ef6f2d9": "The :doc:`Phalcon\\\\Filter <..\/api\/Phalcon_Filter>` component provides a set of commonly used filters and data sanitizing helpers. It provides object-oriented wrappers around the PHP filter extension.",
    "filter_2876899f6219389c80f3cc9e78e9e97b": "Sanitizing data",
    "filter_894165cfe7953925c85eab1191f3c867": "Sanitizing is the process which removes specific characters from a value, that are not required or desired by the user or application. By sanitizing input we ensure that application integrity will be intact.",
    "filter_d5821a95e7aaa55ed43b72ef0e14775c": "returns \"someone@example.com\"",
    "filter_8f053e796ba85cac6d9b8898fa350974": "returns \"hello\"",
    "filter_7b16cae913f7b66b3cede60e5a001159": "returns \"100019\"",
    "filter_75dbb39ae8c53bfa2516d1529db41588": "returns \"100019.01\"",
    "filter_e026d5e41103bb84d12f065f4aa23934": "Sanitizing from Controllers",
    "filter_dc5420fbbc9b9c4f41a8a90335d54f47": "You can access a :doc:`Phalcon\\\\Filter <..\/api\/Phalcon_Filter>` object from your controllers when accessing GET or POST input data (through the request object). The first parameter is the name of the variable to be obtained; the second is the filter to be applied on it.",
    "filter_7fc505adf1a1a7d2187f5ecc5a950365": "Sanitizing price from input",
    "filter_277769acea0ca776c101d2c17a5d2466": "Sanitizing email from input",
    "filter_36ff741b070e90b755ef99fbde9b438c": "Filtering Action Parameters",
    "filter_33e0ab6879b0a768bd0b2097153d4d49": "The next example shows you how to sanitize the action parameters within a controller action:",
    "filter_4ebfda3361a1fabe7be70fedcf157699": "Filtering data",
    "filter_4b94af7039a1ab25a7b967ac26588f92": "In addition to sanitizing, :doc:`Phalcon\\\\Filter <..\/api\/Phalcon_Filter>` also provides filtering by removing or modifying input data to the format we expect.",
    "filter_42431b9e9fde0176fb943ee5374eefb6": "returns \"Hello\"",
    "filter_2e03a6d1ccdcf7c081406aad372249a5": "Types of Built-in Filters",
    "filter_8a608152ff5bd1cce8bb0fbf62695c80": "The following are the built-in filters provided by this component:",
    "filter_c39f0d2625dc1cb85a72aa84a008fb93": "Creating your own Filters",
    "filter_1e4204abe542cfdcabd014c47678555b": "You can add your own filters to :doc:`Phalcon\\\\Filter <..\/api\/Phalcon_Filter>`. The filter function could be an anonymous function:",
    "filter_2f1fffb20b38514cec7ec9556bcc1901": "Using an anonymous function",
    "filter_5b19073aeb2a943879f05d2c76037094": "Sanitize with the \"md5\" filter",
    "filter_bfb683456199b8d1bbb9099dbcb683c8": "Or, if you prefer, you can implement the filter in a class:",
    "filter_15ee45d5412f00b058e56a81d26eef58": "Using an object",
    "filter_c8cb3781e384f6e59fbf4e7e75d76fe9": "Sanitize with the \"ipv4\" filter",
    "filter_029798e03ad6c063f6300b5224a5776a": "Complex Sanitizing and Filtering",
    "filter_e930612d5387062f0589cb3ea5865cb7": "PHP itself provides an excellent filter extension you can use. Check out its documentation: `Data Filtering at PHP Documentation`_",
    "filter_03a91ce6525a43a0db6b9e5e4cd2a8a0": "Implementing your own Filter",
    "filter_8422e15128d4c2bc11fec87586a93b2a": "The :doc:`Phalcon\\\\FilterInterface <..\/api\/Phalcon_FilterInterface>` interface must be implemented to create your own filtering service replacing the one provided by Phalcon."
}