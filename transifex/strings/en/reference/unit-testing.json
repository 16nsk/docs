{
    "unit-testing_93c36b818e7a033e49bcfca15cf4a457": "Unit testing",
    "unit-testing_913bdc0bf8890f572477f716921bce6f": "Writing proper tests can assist in writing better software. If you set up proper test cases you can eliminate most functional bugs and better maintain your software.",
    "unit-testing_a374e53efc365f0011a90be76a2011f1": "Integrating PHPunit with phalcon",
    "unit-testing_9ee5e794b8771e2e59d55108fc06a51c": "If you don't already have phpunit installed, you can do it by using the following composer command:",
    "unit-testing_cfb67edd8028fccf1890a9e61996576f": "or by manually adding it to composer.json:",
    "unit-testing_7158fa84941c11d4c263ca6f70ec9b55": "Or if you don't have composer you can install phpunit via pear:",
    "unit-testing_01b882fdd393c5cf8f49db9c45d0c429": "Once phpunit is installed create a directory called 'tests' in your root directory:",
    "unit-testing_5e798a26464742bf1b4d0853b3714cbb": "Next, we need a 'helper' file to bootstrap the application for unit testing.",
    "unit-testing_2fbbf0b2ba6267b9e8972743c9ecb0de": "The PHPunit helper file",
    "unit-testing_542e5c5081d63b58ac3a10408c0a248f": "A helper file is required to bootstrap the application for running the tests. We have prepared a sample file. Put the file in your tests\/ directory as TestHelper.php.",
    "unit-testing_00ac09769e1af2648931a185f1775955": "required for phalcon\/incubator",
    "unit-testing_479a204750c7d5981daed72ca69a78a2": "use the application autoloader to autoload the classes",
    "unit-testing_8f0283e06cded3c28aa083c40e16ad2b": "autoload the dependencies found in composer",
    "unit-testing_14ae3487ceb261a5061f7a58b5b34bc3": "add any needed services to the DI here",
    "unit-testing_1bc7cf965b5ce77251227ee6e93e3e42": "Should you need to test any components from your own library, add them to the autoloader or use the autoloader from your main application.",
    "unit-testing_8cfec838da9bf8556c3d57fd17a80857": "To help you build the unit tests, we made a few abstract classes you can use to bootstrap the unit tests themselves. These files exist in the Phalcon incubator @ https:\/\/github.com\/phalcon\/incubator.",
    "unit-testing_9a6558d79099380d81048ef8b2584c86": "You can use the incubator library by adding it as a dependency:",
    "unit-testing_f29e2c3667fd0cc18fcab99af326c9b5": "You can also clone the repository using the repo link above.",
    "unit-testing_f0e7d1800e89c826c992746b97d2f9ce": "PHPunit.xml file",
    "unit-testing_f54691d838d46e24cb3f8f16922dfef5": "Now, create a phpunit file:",
    "unit-testing_c5eced327019c69c1a195cef8ae7de44": "Modify the phpunit.xml to fit your needs and save it in tests\/.",
    "unit-testing_103d5109169bc994b7d042bbb413abf5": "This will run any tests under the tests\/ directory.",
    "unit-testing_2f3d3e7963ba338498e407db381b4865": "Sample unit test",
    "unit-testing_2d9ec2e85445092d5f8854cdfc0e9927": "To run any unit tests you need to define them. The autoloader will make sure the proper files are loaded so all you need to do is create the files and phpunit will run the tests for you.",
    "unit-testing_88347cd5b1e7bc9a380a67423710c883": "This example does not contain a config file, most test cases however, do need one. You can add it to the DI to get the UnitTestCase file.",
    "unit-testing_16fdcc6f360acf6eebaa9f05c3a97677": "First create a base unit test called UnitTestCase.php in your \/tests directory:",
    "unit-testing_459c631d8fcd2d9dad5a04feb8db4a2a": "Load any additional services that might be required during testing",
    "unit-testing_1b15f5a55e08aba69442e11350b90cf9": "get any DI components here. If you have a config, be sure to pass it to the parent",
    "unit-testing_0bc81d8cc49b179612c2eb74ec6fa64b": "It's always a good idea to separate your Unit tests in namespaces. For this test we will create the namespace 'Test'. So create a file called \\tests\\Test\\UnitTest.php:",
    "unit-testing_be4b3f760e54f265726e3bc674f4432a": "Now when you execute 'phpunit' in your command-line from the \\tests directory you will get the following output:",
    "unit-testing_bb89d76991e8b5db2aadbbe88424cbb9": "Now you can start building your unit tests. You can view a good guide here (we also recommend reading the PHPunit documentation if you're not familiar with PHPunit):"
}